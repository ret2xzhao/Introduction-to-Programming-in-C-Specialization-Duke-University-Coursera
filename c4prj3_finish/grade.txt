Grading at Thu Apr  4 09:23:48 UTC 2019
Running 'make clean' to do a clean build of your project
rm -rf *.o poker *~
Running 'make poker OTHERFLAGS=-O3' to build your project
gcc -Wall -Werror -ggdb3 -std=gnu99 -pedantic -O3   -c -o cards.o cards.c
gcc -Wall -Werror -ggdb3 -std=gnu99 -pedantic -O3   -c -o deck.o deck.c
gcc -Wall -Werror -ggdb3 -std=gnu99 -pedantic -O3   -c -o eval.o eval.c
gcc -Wall -Werror -ggdb3 -std=gnu99 -pedantic -O3   -c -o future.o future.c
gcc -Wall -Werror -ggdb3 -std=gnu99 -pedantic -O3   -c -o input.o input.c
gcc -Wall -Werror -ggdb3 -std=gnu99 -pedantic -O3   -c -o main.o main.c
gcc -o poker -Wall -Werror -ggdb3 -std=gnu99 -pedantic -O3 cards.o deck.o eval.o future.o input.o main.o
 - Starting with some Texas Hold'em hands
Running a simulation with 20000 draws for 2 hands...
Valgrind reported errors:
==28902== Memcheck, a memory error detector
==28902== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==28902== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==28902== Command: ./poker inp.txt 20000
==28902== Parent PID: 28901
==28902== 
==28902== Invalid read of size 8
==28902==    at 0x401AF9: build_hand_from_match (eval.c:194)
==28902==    by 0x40282C: evaluate_hand (eval.c:373)
==28902==    by 0x4028C2: compare_hands (eval.c:203)
==28902==    by 0x400AEB: actScore (main.c:32)
==28902==    by 0x400AEB: main (main.c:101)
==28902==  Address 0x5205bd8 is 0 bytes after a block of size 56 alloc'd
==28902==    at 0x4C2FD5F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==28902==    by 0x401270: add_card_to (deck.c:53)
==28902==    by 0x401270: add_empty_card (deck.c:64)
==28902==    by 0x402B80: hand_from_string (input.c:28)
==28902==    by 0x402CC6: read_input (input.c:50)
==28902==    by 0x400A17: main (main.c:91)
==28902== 
==28902== 
==28902== Process terminating with default action of signal 6 (SIGABRT): dumping core
==28902==    at 0x4E6F428: raise (raise.c:54)
==28902==    by 0x4E71029: abort (abort.c:89)
==28902==    by 0x4EB17E9: __libc_message (libc_fatal.c:175)
==28902==    by 0x4F5311B: __fortify_fail (fortify_fail.c:37)
==28902==    by 0x4F530BF: __stack_chk_fail (stack_chk_fail.c:28)
==28902==    by 0x401B5F: build_hand_from_match (eval.c:198)
==28902==    by 0x40282C: evaluate_hand (eval.c:373)
==28902==    by 0x4028C2: compare_hands (eval.c:203)
==28902==    by 0x400AEB: actScore (main.c:32)
==28902==    by 0x400AEB: main (main.c:101)
==28902== 
==28902== HEAP SUMMARY:
==28902==     in use at exit: 2,036 bytes in 94 blocks
==28902==   total heap usage: 184 allocs, 90 frees, 16,880 bytes allocated
==28902== 
==28902== LEAK SUMMARY:
==28902==    definitely lost: 16 bytes in 1 blocks
==28902==    indirectly lost: 224 bytes in 15 blocks
==28902==      possibly lost: 0 bytes in 0 blocks
==28902==    still reachable: 1,796 bytes in 78 blocks
==28902==         suppressed: 0 bytes in 0 blocks
==28902== Rerun with --leak-check=full to see details of leaked memory
==28902== 
==28902== For counts of detected and suppressed errors, rerun with: -v
==28902== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Running a simulation with 25000 draws for 3 hands...
Valgrind reported errors:
==28907== Memcheck, a memory error detector
==28907== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==28907== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==28907== Command: ./poker inp.txt 25000
==28907== Parent PID: 28906
==28907== 
==28907== Invalid read of size 8
==28907==    at 0x401AF9: build_hand_from_match (eval.c:194)
==28907==    by 0x40282C: evaluate_hand (eval.c:373)
==28907==    by 0x4028C2: compare_hands (eval.c:203)
==28907==    by 0x400AEB: actScore (main.c:32)
==28907==    by 0x400AEB: main (main.c:101)
==28907==  Address 0x5205bd8 is 0 bytes after a block of size 56 alloc'd
==28907==    at 0x4C2FD5F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==28907==    by 0x401270: add_card_to (deck.c:53)
==28907==    by 0x401270: add_empty_card (deck.c:64)
==28907==    by 0x402B80: hand_from_string (input.c:28)
==28907==    by 0x402CC6: read_input (input.c:50)
==28907==    by 0x400A17: main (main.c:91)
==28907== 
==28907== 
==28907== Process terminating with default action of signal 6 (SIGABRT): dumping core
==28907==    at 0x4E6F428: raise (raise.c:54)
==28907==    by 0x4E71029: abort (abort.c:89)
==28907==    by 0x4EB17E9: __libc_message (libc_fatal.c:175)
==28907==    by 0x4F5311B: __fortify_fail (fortify_fail.c:37)
==28907==    by 0x4F530BF: __stack_chk_fail (stack_chk_fail.c:28)
==28907==    by 0x401B5F: build_hand_from_match (eval.c:198)
==28907==    by 0x40282C: evaluate_hand (eval.c:373)
==28907==    by 0x4028C2: compare_hands (eval.c:203)
==28907==    by 0x400AEB: actScore (main.c:32)
==28907==    by 0x400AEB: main (main.c:101)
==28907== 
==28907== HEAP SUMMARY:
==28907==     in use at exit: 2,296 bytes in 108 blocks
==28907==   total heap usage: 222 allocs, 114 frees, 17,900 bytes allocated
==28907== 
==28907== LEAK SUMMARY:
==28907==    definitely lost: 16 bytes in 1 blocks
==28907==    indirectly lost: 336 bytes in 22 blocks
==28907==      possibly lost: 0 bytes in 0 blocks
==28907==    still reachable: 1,944 bytes in 85 blocks
==28907==         suppressed: 0 bytes in 0 blocks
==28907== Rerun with --leak-check=full to see details of leaked memory
==28907== 
==28907== For counts of detected and suppressed errors, rerun with: -v
==28907== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Running a simulation with 25000 draws for 3 hands...
Could not find the win percent in your output
Could not find the win percent in your output
Could not find the win percent in your output
You dont seem to have the right total draws.
Yours sum to 0 but I expected 25000
Running a simulation with 25000 draws for 2 hands...
Valgrind reported errors:
==28965== Memcheck, a memory error detector
==28965== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==28965== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==28965== Command: ./poker inp2.txt 25000
==28965== Parent PID: 28964
==28965== 
==28965== Invalid read of size 8
==28965==    at 0x4C326D6: memcpy@@GLIBC_2.14 (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==28965==    by 0x40274E: build_hand_from_match (eval.c:193)
==28965==    by 0x40274E: evaluate_hand (eval.c:375)
==28965==    by 0x4028C2: compare_hands (eval.c:203)
==28965==    by 0x400AEB: actScore (main.c:32)
==28965==    by 0x400AEB: main (main.c:101)
==28965==  Address 0x5205bd8 is 0 bytes after a block of size 56 alloc'd
==28965==    at 0x4C2FD5F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==28965==    by 0x401270: add_card_to (deck.c:53)
==28965==    by 0x401270: add_empty_card (deck.c:64)
==28965==    by 0x402B80: hand_from_string (input.c:28)
==28965==    by 0x402CC6: read_input (input.c:50)
==28965==    by 0x400A17: main (main.c:91)
==28965== 
==28965== 
==28965== Process terminating with default action of signal 6 (SIGABRT): dumping core
==28965==    at 0x4E6F428: raise (raise.c:54)
==28965==    by 0x4E71029: abort (abort.c:89)
==28965==    by 0x4EB17E9: __libc_message (libc_fatal.c:175)
==28965==    by 0x4F5311B: __fortify_fail (fortify_fail.c:37)
==28965==    by 0x4F530BF: __stack_chk_fail (stack_chk_fail.c:28)
==28965==    by 0x40286A: evaluate_hand (eval.c:376)
==28965==    by 0x4028C2: compare_hands (eval.c:203)
==28965==    by 0x400AEB: actScore (main.c:32)
==28965==    by 0x400AEB: main (main.c:101)
==28965== 
==28965== HEAP SUMMARY:
==28965==     in use at exit: 2,036 bytes in 94 blocks
==28965==   total heap usage: 182 allocs, 88 frees, 16,824 bytes allocated
==28965== 
==28965== LEAK SUMMARY:
==28965==    definitely lost: 16 bytes in 1 blocks
==28965==    indirectly lost: 224 bytes in 15 blocks
==28965==      possibly lost: 0 bytes in 0 blocks
==28965==    still reachable: 1,796 bytes in 78 blocks
==28965==         suppressed: 0 bytes in 0 blocks
==28965== Rerun with --leak-check=full to see details of leaked memory
==28965== 
==28965== For counts of detected and suppressed errors, rerun with: -v
==28965== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Running a simulation with 80000 draws for 4 hands...
Could not find the win percent in your output
Could not find the win percent in your output
Could not find the win percent in your output
Could not find the win percent in your output
You dont seem to have the right total draws.
Yours sum to 0 but I expected 80000
Running a simulation with 30000 draws for 2 hands...
Could not find the win percent in your output
Could not find the win percent in your output
You dont seem to have the right total draws.
Yours sum to 0 but I expected 30000
 - Next, few Seven Card Stud hands
Running a simulation with 30000 draws for 2 hands...
Valgrind reported errors:
==29076== Memcheck, a memory error detector
==29076== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==29076== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==29076== Command: ./poker inp.txt 30000
==29076== Parent PID: 29075
==29076== 
==29076== Invalid read of size 8
==29076==    at 0x401AF9: build_hand_from_match (eval.c:194)
==29076==    by 0x40282C: evaluate_hand (eval.c:373)
==29076==    by 0x4028C2: compare_hands (eval.c:203)
==29076==    by 0x400AEB: actScore (main.c:32)
==29076==    by 0x400AEB: main (main.c:101)
==29076==  Address 0x5205a48 is 0 bytes after a block of size 56 alloc'd
==29076==    at 0x4C2FD5F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==29076==    by 0x401270: add_card_to (deck.c:53)
==29076==    by 0x401270: add_empty_card (deck.c:64)
==29076==    by 0x402B80: hand_from_string (input.c:28)
==29076==    by 0x402CC6: read_input (input.c:50)
==29076==    by 0x400A17: main (main.c:91)
==29076== 
==29076== 
==29076== Process terminating with default action of signal 6 (SIGABRT): dumping core
==29076==    at 0x4E6F428: raise (raise.c:54)
==29076==    by 0x4E71029: abort (abort.c:89)
==29076==    by 0x4EB17E9: __libc_message (libc_fatal.c:175)
==29076==    by 0x4F5311B: __fortify_fail (fortify_fail.c:37)
==29076==    by 0x4F530BF: __stack_chk_fail (stack_chk_fail.c:28)
==29076==    by 0x401B5F: build_hand_from_match (eval.c:198)
==29076==    by 0x40282C: evaluate_hand (eval.c:373)
==29076==    by 0x4028C2: compare_hands (eval.c:203)
==29076==    by 0x400AEB: actScore (main.c:32)
==29076==    by 0x400AEB: main (main.c:101)
==29076== 
==29076== HEAP SUMMARY:
==29076==     in use at exit: 2,036 bytes in 95 blocks
==29076==   total heap usage: 179 allocs, 84 frees, 16,328 bytes allocated
==29076== 
==29076== LEAK SUMMARY:
==29076==    definitely lost: 16 bytes in 1 blocks
==29076==    indirectly lost: 224 bytes in 15 blocks
==29076==      possibly lost: 0 bytes in 0 blocks
==29076==    still reachable: 1,796 bytes in 79 blocks
==29076==         suppressed: 0 bytes in 0 blocks
==29076== Rerun with --leak-check=full to see details of leaked memory
==29076== 
==29076== For counts of detected and suppressed errors, rerun with: -v
==29076== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Running a simulation with 40000 draws for 3 hands...
Valgrind reported errors:
==29081== Memcheck, a memory error detector
==29081== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==29081== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==29081== Command: ./poker inp2.txt 40000
==29081== Parent PID: 29080
==29081== 
==29081== Invalid read of size 8
==29081==    at 0x401AB7: build_hand_from_match (eval.c:194)
==29081==    by 0x40282C: evaluate_hand (eval.c:373)
==29081==    by 0x4028C2: compare_hands (eval.c:203)
==29081==    by 0x400AEB: actScore (main.c:32)
==29081==    by 0x400AEB: main (main.c:101)
==29081==  Address 0x5205a48 is 0 bytes after a block of size 56 alloc'd
==29081==    at 0x4C2FD5F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==29081==    by 0x401270: add_card_to (deck.c:53)
==29081==    by 0x401270: add_empty_card (deck.c:64)
==29081==    by 0x402B80: hand_from_string (input.c:28)
==29081==    by 0x402CC6: read_input (input.c:50)
==29081==    by 0x400A17: main (main.c:91)
==29081== 
==29081== 
==29081== Process terminating with default action of signal 6 (SIGABRT): dumping core
==29081==    at 0x4E6F428: raise (raise.c:54)
==29081==    by 0x4E71029: abort (abort.c:89)
==29081==    by 0x4EB17E9: __libc_message (libc_fatal.c:175)
==29081==    by 0x4F5311B: __fortify_fail (fortify_fail.c:37)
==29081==    by 0x4F530BF: __stack_chk_fail (stack_chk_fail.c:28)
==29081==    by 0x401B5F: build_hand_from_match (eval.c:198)
==29081==    by 0x40282C: evaluate_hand (eval.c:373)
==29081==    by 0x4028C2: compare_hands (eval.c:203)
==29081==    by 0x400AEB: actScore (main.c:32)
==29081==    by 0x400AEB: main (main.c:101)
==29081== 
==29081== HEAP SUMMARY:
==29081==     in use at exit: 2,216 bytes in 106 blocks
==29081==   total heap usage: 200 allocs, 94 frees, 15,852 bytes allocated
==29081== 
==29081== LEAK SUMMARY:
==29081==    definitely lost: 16 bytes in 1 blocks
==29081==    indirectly lost: 336 bytes in 22 blocks
==29081==      possibly lost: 0 bytes in 0 blocks
==29081==    still reachable: 1,864 bytes in 83 blocks
==29081==         suppressed: 0 bytes in 0 blocks
==29081== Rerun with --leak-check=full to see details of leaked memory
==29081== 
==29081== For counts of detected and suppressed errors, rerun with: -v
==29081== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
 - Then one from a completely made up poker variant
Running a simulation with 100000 draws for 6 hands...
Valgrind reported errors:
==29086== Memcheck, a memory error detector
==29086== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==29086== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==29086== Command: ./poker whacky.txt 100000
==29086== Parent PID: 29085
==29086== 
==29086== Invalid read of size 8
==29086==    at 0x401AF9: build_hand_from_match (eval.c:194)
==29086==    by 0x40282C: evaluate_hand (eval.c:373)
==29086==    by 0x4028C2: compare_hands (eval.c:203)
==29086==    by 0x400AEB: actScore (main.c:32)
==29086==    by 0x400AEB: main (main.c:101)
==29086==  Address 0x5205b08 is 0 bytes after a block of size 56 alloc'd
==29086==    at 0x4C2FD5F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==29086==    by 0x401201: add_card_to (deck.c:53)
==29086==    by 0x402BE6: hand_from_string (input.c:31)
==29086==    by 0x402CC6: read_input (input.c:50)
==29086==    by 0x400A17: main (main.c:91)
==29086== 
==29086== 
==29086== Process terminating with default action of signal 6 (SIGABRT): dumping core
==29086==    at 0x4E6F428: raise (raise.c:54)
==29086==    by 0x4E71029: abort (abort.c:89)
==29086==    by 0x4EB17E9: __libc_message (libc_fatal.c:175)
==29086==    by 0x4F5311B: __fortify_fail (fortify_fail.c:37)
==29086==    by 0x4F530BF: __stack_chk_fail (stack_chk_fail.c:28)
==29086==    by 0x401B5F: build_hand_from_match (eval.c:198)
==29086==    by 0x40282C: evaluate_hand (eval.c:373)
==29086==    by 0x4028C2: compare_hands (eval.c:203)
==29086==    by 0x400AEB: actScore (main.c:32)
==29086==    by 0x400AEB: main (main.c:101)
==29086== 
==29086== HEAP SUMMARY:
==29086==     in use at exit: 2,868 bytes in 143 blocks
==29086==   total heap usage: 283 allocs, 140 frees, 20,208 bytes allocated
==29086== 
==29086== LEAK SUMMARY:
==29086==    definitely lost: 16 bytes in 1 blocks
==29086==    indirectly lost: 672 bytes in 43 blocks
==29086==      possibly lost: 0 bytes in 0 blocks
==29086==    still reachable: 2,180 bytes in 99 blocks
==29086==         suppressed: 0 bytes in 0 blocks
==29086== Rerun with --leak-check=full to see details of leaked memory
==29086== 
==29086== For counts of detected and suppressed errors, rerun with: -v
==29086== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

Overall Grade: F
