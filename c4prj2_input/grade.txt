Grading at Wed Apr  3 06:38:25 UTC 2019
Compiling cards.c -> cards.o
Compiling deck.c -> deck.o
Compiling input.c -> input.o
Compiling future.c -> future.o
Linking input.o, future.o deck.o, cards.o, and our tester
Testing with input file with 
 o 1 hand
 o No unknown/future cards
Your file matched the expected output
Test case passed
Testing with input file with 
 o Many hands
 o No unknown/future cards
Your file matched the expected output
Test case passed
Testing with input file with 
 o Many hands
 o 1 unknown/future cards per hand
Valgrind reported errors:
==183== Memcheck, a memory error detector
==183== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==183== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==183== Command: ./tester h.txt d.txt
==183== Parent PID: 182
==183== 
==183== Invalid write of size 1
==183==    at 0x400B41: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==183==    by 0x303030303030302F: ???
==183==    by 0x303030303030302F: ???
==183==    by 0x303030303030302F: ???
==183==    by 0x303030303030302F: ???
==183==    by 0x303030303030302F: ???
==183==    by 0x303030303030302F: ???
==183==    by 0x303030303030302F: ???
==183==    by 0x303030303030302F: ???
==183==    by 0x303030303030302F: ???
==183==    by 0x303030303030302F: ???
==183==    by 0x303030303030302F: ???
==183==  Address 0xfff001000 is not stack'd, malloc'd or (recently) free'd
==183== 
==183== 
==183== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==183==  Access not within mapped region at address 0xFFF001000
==183==    at 0x400B41: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==183==    by 0x303030303030302F: ???
==183==    by 0x303030303030302F: ???
==183==    by 0x303030303030302F: ???
==183==    by 0x303030303030302F: ???
==183==    by 0x303030303030302F: ???
==183==    by 0x303030303030302F: ???
==183==    by 0x303030303030302F: ???
==183==    by 0x303030303030302F: ???
==183==    by 0x303030303030302F: ???
==183==    by 0x303030303030302F: ???
==183==    by 0x303030303030302F: ???
==183==  If you believe this happened as a result of a stack
==183==  overflow in your program's main thread (unlikely but
==183==  possible), you can try to increase the size of the
==183==  main thread stack using the --main-stacksize= flag.
==183==  The main thread stack size used in this run was 8388608.
==183== 
==183== HEAP SUMMARY:
==183==     in use at exit: 792 bytes in 11 blocks
==183==   total heap usage: 17 allocs, 6 frees, 5,008 bytes allocated
==183== 
==183== LEAK SUMMARY:
==183==    definitely lost: 8 bytes in 1 blocks
==183==    indirectly lost: 0 bytes in 0 blocks
==183==      possibly lost: 0 bytes in 0 blocks
==183==    still reachable: 784 bytes in 10 blocks
==183==         suppressed: 0 bytes in 0 blocks
==183== Rerun with --leak-check=full to see details of leaked memory
==183== 
==183== For counts of detected and suppressed errors, rerun with: -v
==183== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o Many unknown/future cards per hand
Valgrind reported errors:
==189== Memcheck, a memory error detector
==189== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==189== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==189== Command: ./tester i1 i2
==189== Parent PID: 188
==189== 
==189== Invalid write of size 1
==189==    at 0x400B41: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==189==    by 0x303030303030302F: ???
==189==    by 0x303030303030302F: ???
==189==    by 0x303030303030302F: ???
==189==    by 0x303030303030302F: ???
==189==    by 0x303030303030302F: ???
==189==    by 0x303030303030302F: ???
==189==    by 0x303030303030302F: ???
==189==    by 0x303030303030302F: ???
==189==    by 0x303030303030302F: ???
==189==    by 0x303030303030302F: ???
==189==    by 0x303030303030302F: ???
==189==  Address 0xfff001000 is not stack'd, malloc'd or (recently) free'd
==189== 
==189== 
==189== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==189==  Access not within mapped region at address 0xFFF001000
==189==    at 0x400B41: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==189==    by 0x303030303030302F: ???
==189==    by 0x303030303030302F: ???
==189==    by 0x303030303030302F: ???
==189==    by 0x303030303030302F: ???
==189==    by 0x303030303030302F: ???
==189==    by 0x303030303030302F: ???
==189==    by 0x303030303030302F: ???
==189==    by 0x303030303030302F: ???
==189==    by 0x303030303030302F: ???
==189==    by 0x303030303030302F: ???
==189==    by 0x303030303030302F: ???
==189==  If you believe this happened as a result of a stack
==189==  overflow in your program's main thread (unlikely but
==189==  possible), you can try to increase the size of the
==189==  main thread stack using the --main-stacksize= flag.
==189==  The main thread stack size used in this run was 8388608.
==189== 
==189== HEAP SUMMARY:
==189==     in use at exit: 744 bytes in 8 blocks
==189==   total heap usage: 11 allocs, 3 frees, 4,864 bytes allocated
==189== 
==189== LEAK SUMMARY:
==189==    definitely lost: 8 bytes in 1 blocks
==189==    indirectly lost: 0 bytes in 0 blocks
==189==      possibly lost: 0 bytes in 0 blocks
==189==    still reachable: 736 bytes in 7 blocks
==189==         suppressed: 0 bytes in 0 blocks
==189== Rerun with --leak-check=full to see details of leaked memory
==189== 
==189== For counts of detected and suppressed errors, rerun with: -v
==189== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

Overall Grade: C
