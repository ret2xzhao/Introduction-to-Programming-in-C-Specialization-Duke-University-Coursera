Grading at Wed Apr  3 07:16:02 UTC 2019
Compiling cards.c -> cards.o
Compiling deck.c -> deck.o
Compiling input.c -> input.o
Compiling future.c -> future.o
Linking input.o, future.o deck.o, cards.o, and our tester
Testing with input file with 
 o 1 hand
 o No unknown/future cards
Valgrind reported errors:
==2081== Memcheck, a memory error detector
==2081== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==2081== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==2081== Command: ./tester hands.txt draw.txt
==2081== Parent PID: 2080
==2081== 
==2081== Invalid read of size 8
==2081==    at 0x4010EB: print_hand (in /graderhome/work/c4prj2_input/tester)
==2081==    by 0x401CEA: main (test-input.c:84)
==2081==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==2081== 
==2081== 
==2081== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==2081==  Access not within mapped region at address 0x8
==2081==    at 0x4010EB: print_hand (in /graderhome/work/c4prj2_input/tester)
==2081==    by 0x401CEA: main (test-input.c:84)
==2081==  If you believe this happened as a result of a stack
==2081==  overflow in your program's main thread (unlikely but
==2081==  possible), you can try to increase the size of the
==2081==  main thread stack using the --main-stacksize= flag.
==2081==  The main thread stack size used in this run was 8388608.
==2081== 
==2081== HEAP SUMMARY:
==2081==     in use at exit: 80 bytes in 8 blocks
==2081==   total heap usage: 15 allocs, 7 frees, 13,712 bytes allocated
==2081== 
==2081== LEAK SUMMARY:
==2081==    definitely lost: 16 bytes in 1 blocks
==2081==    indirectly lost: 16 bytes in 2 blocks
==2081==      possibly lost: 0 bytes in 0 blocks
==2081==    still reachable: 48 bytes in 5 blocks
==2081==         suppressed: 0 bytes in 0 blocks
==2081== Rerun with --leak-check=full to see details of leaked memory
==2081== 
==2081== For counts of detected and suppressed errors, rerun with: -v
==2081== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o No unknown/future cards
Valgrind reported errors:
==2086== Memcheck, a memory error detector
==2086== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==2086== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==2086== Command: ./tester hands.txt draw.txt
==2086== Parent PID: 2085
==2086== 
==2086== Invalid read of size 8
==2086==    at 0x4010EB: print_hand (in /graderhome/work/c4prj2_input/tester)
==2086==    by 0x401CEA: main (test-input.c:84)
==2086==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==2086== 
==2086== 
==2086== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==2086==  Access not within mapped region at address 0x8
==2086==    at 0x4010EB: print_hand (in /graderhome/work/c4prj2_input/tester)
==2086==    by 0x401CEA: main (test-input.c:84)
==2086==  If you believe this happened as a result of a stack
==2086==  overflow in your program's main thread (unlikely but
==2086==  possible), you can try to increase the size of the
==2086==  main thread stack using the --main-stacksize= flag.
==2086==  The main thread stack size used in this run was 8388608.
==2086== 
==2086== HEAP SUMMARY:
==2086==     in use at exit: 200 bytes in 17 blocks
==2086==   total heap usage: 27 allocs, 10 frees, 13,880 bytes allocated
==2086== 
==2086== LEAK SUMMARY:
==2086==    definitely lost: 64 bytes in 4 blocks
==2086==    indirectly lost: 64 bytes in 8 blocks
==2086==      possibly lost: 0 bytes in 0 blocks
==2086==    still reachable: 72 bytes in 5 blocks
==2086==         suppressed: 0 bytes in 0 blocks
==2086== Rerun with --leak-check=full to see details of leaked memory
==2086== 
==2086== For counts of detected and suppressed errors, rerun with: -v
==2086== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o 1 unknown/future cards per hand
Valgrind reported errors:
==2092== Memcheck, a memory error detector
==2092== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==2092== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==2092== Command: ./tester h.txt d.txt
==2092== Parent PID: 2091
==2092== 
==2092== Invalid read of size 8
==2092==    at 0x4010EB: print_hand (in /graderhome/work/c4prj2_input/tester)
==2092==    by 0x401CEA: main (test-input.c:84)
==2092==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==2092== 
==2092== 
==2092== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==2092==  Access not within mapped region at address 0x8
==2092==    at 0x4010EB: print_hand (in /graderhome/work/c4prj2_input/tester)
==2092==    by 0x401CEA: main (test-input.c:84)
==2092==  If you believe this happened as a result of a stack
==2092==  overflow in your program's main thread (unlikely but
==2092==  possible), you can try to increase the size of the
==2092==  main thread stack using the --main-stacksize= flag.
==2092==  The main thread stack size used in this run was 8388608.
==2092== 
==2092== HEAP SUMMARY:
==2092==     in use at exit: 512 bytes in 38 blocks
==2092==   total heap usage: 63 allocs, 25 frees, 14,432 bytes allocated
==2092== 
==2092== LEAK SUMMARY:
==2092==    definitely lost: 64 bytes in 4 blocks
==2092==    indirectly lost: 64 bytes in 8 blocks
==2092==      possibly lost: 0 bytes in 0 blocks
==2092==    still reachable: 384 bytes in 26 blocks
==2092==         suppressed: 0 bytes in 0 blocks
==2092== Rerun with --leak-check=full to see details of leaked memory
==2092== 
==2092== For counts of detected and suppressed errors, rerun with: -v
==2092== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o Many unknown/future cards per hand
Valgrind reported errors:
==2098== Memcheck, a memory error detector
==2098== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==2098== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==2098== Command: ./tester i1 i2
==2098== Parent PID: 2097
==2098== 

Overall Grade: F
